[1 of 1] Compiling Maths            ( Maths.hs, Maths.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 22, types: 17, coercions: 0, joins: 0/0}

-- RHS size: {terms: 7, types: 6, coercions: 0, joins: 0/0}
square :: forall {a}. Num a => a -> a
[GblId, Arity=2, Unf=OtherCon []]
square
  = \ (@a_ahx) ($dNum_aAt :: Num a_ahx) (x_agc :: a_ahx) ->
      * @a_ahx $dNum_aAt x_agc x_agc

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule1_rAQ :: GHC.Prim.Addr#
[GblId, Unf=OtherCon []]
$trModule1_rAQ = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2_rAY :: GHC.Types.TrName
[GblId, Unf=OtherCon []]
$trModule2_rAY = GHC.Types.TrNameS $trModule1_rAQ

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
$trModule3_rAZ :: GHC.Prim.Addr#
[GblId, Unf=OtherCon []]
$trModule3_rAZ = "Maths"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule4_rB0 :: GHC.Types.TrName
[GblId, Unf=OtherCon []]
$trModule4_rB0 = GHC.Types.TrNameS $trModule3_rAZ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Maths.$trModule :: GHC.Types.Module
[GblId, Unf=OtherCon []]
Maths.$trModule = GHC.Types.Module $trModule2_rAY $trModule4_rB0



