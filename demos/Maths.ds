[1 of 1] Compiling Maths            ( Maths.hs, Maths.o )

==================== Desugar (after optimization) ====================
Result size of Desugar (after optimization)
  = {terms: 14, types: 13, coercions: 0, joins: 0/0}

-- RHS size: {terms: 7, types: 6, coercions: 0, joins: 0/0}
square :: forall {a}. Num a => a -> a
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30 0] 40 0}]
square
  = \ (@a_aht) ($dNum_aAp :: Num a_aht) (x_ag8 :: a_aht) ->
      * @a_aht $dNum_aAp x_ag8 x_ag8

-- RHS size: {terms: 5, types: 0, coercions: 0, joins: 0/0}
Maths.$trModule :: GHC.Types.Module
[LclIdX,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 80 30}]
Maths.$trModule
  = GHC.Types.Module
      (GHC.Types.TrNameS "main"#) (GHC.Types.TrNameS "Maths"#)



